spring.application.name=GestionLivres

spring.h2.console.enabled=true
spring.h2.console.path=/h2

spring.datasource.username=Sarra
spring.datasource.password=
spring.datasource.url=jdbc:h2:file:./Database/Data/Livres
spring.datasource.driver-class-name=org.h2.Driver
spring.jpa.hibernate.ddl-auto = update

spring.servlet.multipart.max-file-size=900MB
spring.servlet.multipart.max-request-size=900MB

spring.servlet.multipart.enabled=true

# Désactive le CORS par défaut de Spring Security (si vous l'utilisez)
spring.security.cors.enabled=false

file.upload-dir=uploads/

# Pour Spring Boot 3.x+
spring.mvc.cors.allow-credentials=true
spring.mvc.cors.allowed-origins=http://localhost:4200
spring.mvc.cors.allowed-origin-patterns=http://localhost:[*],http://127.0.0.1:[*]
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.allowed-headers=*
spring.mvc.cors.max-age=3600

spring.cloud.config.enabled=false
server.port=8095

# Enable Eureka client
eureka.client.enabled=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.client.register-with-eureka=true
eureka.instance.instance-id=${spring.application.name}:${random.value}

# Amélioration de la gestion de la déconnexion Eureka
eureka.client.healthcheck.enabled=true
eureka.instance.lease-renewal-interval-in-seconds=30
eureka.instance.lease-expiration-duration-in-seconds=90

# Configuration du comportement d'arrêt
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=20s

# Configuration de la résilience Eureka
eureka.client.fetch-registry=true
eureka.client.registry-fetch-interval-seconds=5
eureka.client.eureka-service-url-poll-interval-seconds=5
eureka.client.initial-instance-info-replication-interval-seconds=5
eureka.client.instance-info-replication-interval-seconds=5
eureka.instance.prefer-ip-address=true